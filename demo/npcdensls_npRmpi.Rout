
R version 2.11.0 (2010-04-22)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Loading required package: boot
Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-8) + Rmpi 0.5-8
master (rank 0, comm 1) of size 2 is running on: jeffrey-racines-macbook-pro 
slave1 (rank 1, comm 1) of size 2 is running on: jeffrey-racines-macbook-pro 
> ## Make sure you have the .Rprofile file from npRmpi/inst/ in your
> ## current directory or home directory. It is necessary.
> 
> ## To run this on systems with OPENMPI installed and working, try
> ## mpirun -np 2 R CMD BATCH npcdens_npRmpi. Check the time in the output
> ## file foo.Rout (the name of this file with extension .Rout), then
> ## try with, say, 4 processors and compare run time.
> 
> ## Initialize master and slaves.
> 
> mpi.bcast.cmd(np.mpi.initialize(),
+               caller.execute=TRUE)
> 
> ## Turn off progress i/o as this clutters the output file (if you want
> ## to see search progress you can comment out this command)
> 
> mpi.bcast.cmd(options(np.messages=FALSE),
+               caller.execute=TRUE)
> 
> ## Load your data and broadcast it to all slave nodes
> 
> data(wage1)
> mpi.bcast.Robj2slave(wage1)
> 
> t1 <- Sys.time()
> 
> ## A conditional density estimation example. 
> 
> mpi.bcast.cmd(bw <- npcdensbw(lwage~married+
+                               female+
+                               nonwhite+                
+                               educ+
+                               exper+
+                               tenure,
+                               bwmethod="cv.ls",
+                               nmulti=1,
+                               data=wage1),
+               caller.execute=TRUE)
> 
> summary(bw)

Conditional density data (526 observations, 7 variable(s))
(1 dependent variable(s), and 6 explanatory variable(s))

Bandwidth Selection Method: Least Squares Cross-Validation
Formula: lwage ~ married + female + nonwhite + educ + exper + tenure
Bandwidth Type: Fixed
Objective Function Value: -3.586283e+13 (achieved on multistart 1)

Exp. Var. Name: married  Bandwidth: 0.3260366   Lambda Max: 0.5     
Exp. Var. Name: female   Bandwidth: 0.2399864   Lambda Max: 0.5     
Exp. Var. Name: nonwhite Bandwidth: 0.3194618   Lambda Max: 0.5     
Exp. Var. Name: educ     Bandwidth: 3.451477  Scale Factor: 5.094524
Exp. Var. Name: exper    Bandwidth: 47052799  Scale Factor: 7586819 
Exp. Var. Name: tenure   Bandwidth: 15.61908  Scale Factor: 6.586976 

Dep. Var. Name: lwage    Bandwidth: 2.026627e-16 Scale Factor: 8.343775e-16

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Explanatory Vars.: 3
No. Continuous Dependent Vars.: 1

Unordered Categorical Kernel Type: Aitchison and Aitken
No. Unordered Categorical Explanatory Vars.: 3

> 
> mpi.bcast.cmd(model <- npcdens(bws=bw),
+               caller.execute=TRUE)
> 
> t2 <- Sys.time()
> 
> as.numeric((t2-t1),units="secs")
[1] 631.8412
> 
> summary(model)

Conditional Density Data: 526 training points, in 7 variable(s)
(1 dependent variable(s), and 6 explanatory variable(s))

                               lwage
Dep. Var. Bandwidth(s): 2.026627e-16
                          married    female  nonwhite     educ    exper
Exp. Var. Bandwidth(s): 0.3260366 0.2399864 0.3194618 3.451477 47052799
                          tenure
Exp. Var. Bandwidth(s): 15.61908

Bandwidth Type: Fixed
Log Likelihood: 16371.64

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Explanatory Vars.: 3
No. Continuous Dependent Vars.: 1

Unordered Categorical Kernel Type: Aitchison and Aitken
No. Unordered Categorical Explanatory Vars.: 3

> 
> ## Clean up properly then quit()
> 
> mpi.close.Rslaves()
[1] 1
> 
> mpi.quit()
